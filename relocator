#!/usr/bin/env ruby

require 'highline/import'
require_relative 'lib/environment'

environment = ARGV[0]
# puts environment
Environment.environment = environment || "production"

choose do |menu|
  menu.prompt = "What would you like to do?"
  menu.choice("Add") do |chosen|
    Location.add
  end
  menu.choice("View") do |chosen|
    search_city = Location.fetch_query
    Location.find(search_city).each do |record|
      print record
      puts ""
    end
    puts ""
  end
  menu.choice("Edit") do |chosen|
    puts "you want to edit"
  end
  menu.choice("Remove") do |chosen|
    delete_city = Location.fetch_query(true)
    Location.remove(delete_city)
  end
end





# pup = ""
# choose do |menu|
#   menu.prompt = "Please choose your favorite programming language?  "

#   menu.choice(:ruby) { say("This should be <%= color('bold', BOLD) %>!")}
#   menu.choices(:python, :perl) do |chosen|
#     say("Yo you picked #{chosen}")
#     pup = chosen
#   end
# end
# pete = ask("Company?  ") { |q| q.default = "none" }

# puts pete













# Examples

# Basic usage:
# ask("Company?  ") { |q| q.default = "none" }

# Validation:
# ask("Age?  ", Integer) { |q| q.in = 0..105 }
# ask("Name?  (last, first)  ") { |q| q.validate = /\A\w+, ?\w+\Z/ }

# Type conversion for answers:
# ask("Birthday?  ", Date)
# ask("Interests?  (comma sep list)  ", lambda { |str| str.split(/,\s*/) })

# Reading passwords:
# ask("Enter your password:  ") { |q| q.echo = false }
# ask("Enter your password:  ") { |q| q.echo = "x" }

# ERb based output (with HighLine's ANSI color tools):
# say("This should be <%= color('bold', BOLD) %>!")

# Menus:
# choose do |menu|
#   menu.prompt = "Please choose your favorite programming language?  "
#   menu.choice(:ruby) { say("Good choice!") }
#   menu.choices(:python, :perl) { say("Not from around here, are you?") }
# end






